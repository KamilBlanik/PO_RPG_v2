<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>